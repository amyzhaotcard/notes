(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{456:function(e,t,r){"use strict";r.r(t);var v=r(26),a=Object(v.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"vue2-0-v-for-中-key-到底有什么用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue2-0-v-for-中-key-到底有什么用"}},[e._v("#")]),e._v(" Vue2.0 v-for 中 :key 到底有什么用？")]),e._v(" "),r("p",[e._v("当 Vue.js 用 v-for 正在更新已渲染过的元素列表时，它默认用 “就地复用” 策略 。")]),e._v(" "),r("p",[e._v("比如有一个数组 [1,2,3], 当要删除 2 并且没有 key 时，")]),e._v(" "),r("ul",[r("li",[e._v("首先对比 1 和 1，发现「1 没变」；然后对比 2 和 3，发现「2 变成了 3」；最后对比 undefined 和 3，发现「3 被删除了」。")]),e._v(" "),r("li",[e._v("所以计算机的结论是：「2 变成了 3」以及「3 被删除了」。")]),e._v(" "),r("li",[e._v("【1】没变，所以就地复用 1 及 1 里面的内容")]),e._v(" "),r("li",[e._v("【2 变成了 3】，2 里面的状态可以就地复用")]),e._v(" "),r("li",[e._v("【3 被删除】3 里面所有的东西都删除")])]),e._v(" "),r("h2",{attrs:{id:"解决方案-把-id-作为-key"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解决方案-把-id-作为-key"}},[e._v("#")]),e._v(" 解决方案：把 ID 作为 Key")]),e._v(" "),r("h2",{attrs:{id:"为什么不能用-index-作为-key"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么不能用-index-作为-key"}},[e._v("#")]),e._v(" 为什么不能用 index 作为 key?")]),e._v(" "),r("p",[e._v("如果用 index 作为 key,那么在删除第二项的时候，index 就会从 1 2 3 变成 1 2 （因为 index 永远是连续的，所以不可能是 1 3 ），那么 Vue 依然会认为删除的是第三项。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.zhihu.com/question/61064119",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue2.0 v-for 中 :key 到底有什么用？"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=a.exports}}]);